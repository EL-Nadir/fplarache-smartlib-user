name: Deploy Maven Project to ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
  ECS_CLUSTER: dev-fplarache-smartlib-user-cluster
  ECS_SERVICE: dev-smartlib-user-service
  ECS_TASK_DEFINITION: dev-smartlib-user-td

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      # Step 3: Build Maven Project
      - name: Build with Maven
        run: |
          mvn clean package -DskipTests

      # Step 4: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Step 5: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      # Step 6: Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          IMAGE_URI=${{ secrets.AWS_ECR_REGISTRY }}/dev-fplarache-smartlib-user-repository:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      # Step 7: Register New Task Definition
      - name: Register Task Definition
        id: register-task
        run: |
          TASK_DEFINITION=$(jq -n --arg IMAGE_URI "${{ secrets.AWS_ECR_REGISTRY }}/dev-fplarache-smartlib-user-repository:latest" \
          '{
            family: "dev-smartlib-user-td",
            networkMode: "awsvpc",
            containerDefinitions: [
              {
                name: "dev-smartlib-user-container",
                image: $IMAGE_URI,
                memory: 512,
                cpu: 256,
                essential: true,
                logConfiguration: {
                  logDriver: "awslogs",
                  options: {
                    "awslogs-group": "/ecs/dev-smartlib-user",
                    "awslogs-region": env.AWS_REGION,
                    "awslogs-stream-prefix": "ecs"
                  }
                }
              }
            ],
            requiresCompatibilities: ["FARGATE"],
            cpu: "256",
            memory: "512"
          }')
          echo "$TASK_DEFINITION" > ecs/task-definition.json

          NEW_TASK_DEFINITION=$(aws ecs register-task-definition --cli-input-json file://ecs/task-definition.json --query "taskDefinition.taskDefinitionArn" --output text)
          echo "NEW_TASK_DEFINITION=$NEW_TASK_DEFINITION" >> $GITHUB_ENV

      # Step 8: Update ECS Service
      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --task-definition ${{ env.NEW_TASK_DEFINITION }}
